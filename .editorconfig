root = true

[*]
indent_style = space

[*.cs] 
indent_size = 4 
insert_final_newline = true 
trim_trailing_whitespace = true

[*.{yml,csproj,props,targets,xml,json,hjson,sql,xaml,proto}]
indent_size = 2
insert_final_newline = true 
trim_trailing_whitespace = true

[*.cs]
### Language Conventions ###
# Docs: https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/code-style-rule-options

csharp_keep_existing_initializer_arrangement = true

# "This." and "Me." Qualification
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

# Language keywords (int, string, etc.) vs framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Modifier preferences
dotnet_style_require_accessibility_modifiers = true:warning
csharp_preferred_modifier_order = public,private,protected,internal,new,abstract,virtual,sealed,override,static,readonly,extern,unsafe,volatile,async
dotnet_style_readonly_field = true:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:warning

# Expression-level Preferences
dotnet_style_object_initializer = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_prefer_inferred_tuple_names = true:warning
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_style_prefer_compound_assignment = true:warning
dotnet_style_prefer_simplified_interpolation = true:warning
dotnet_style_prefer_simplified_boolean_expressions = true:warning

# "Null" checking preferences
dotnet_style_coalesce_expression = true:warning
dotnet_style_null_propagation = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion

# C# style rules
# 'var' preferences
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:warning

# Expression-bodied Members
csharp_style_expression_bodied_methods = false:suggestion
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_operators = false:suggestion
csharp_style_expression_bodied_properties = true:warning
csharp_style_expression_bodied_indexers = true:warning
csharp_style_expression_bodied_accessors = true:warning
csharp_style_expression_bodied_lambdas = true:warning
csharp_style_expression_bodied_local_functions = false:suggestion

# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_prefer_switch_expression = true:warning
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_prefer_not_pattern = true:warning

# Expression-level Preferences
csharp_style_inlined_variable_declaration = true:warning
csharp_prefer_simple_default_expression = true:warning
csharp_style_pattern_local_over_anonymous_function = true:warning
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:warning

# "Null" checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:warning

# Code Block Preferences
csharp_prefer_braces = false:warning
csharp_prefer_simple_using_statement = true:suggestion

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:warning

# Modifier preferences
csharp_prefer_static_local_function = true:suggestion

### Unnecessary code rules ###

csharp_style_unused_value_expression_statement_preference = discard_variable:silent
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
dotnet_code_quality_unused_parameters = all:suggestion
dotnet_remove_unnecessary_suppression_exclusions = none

### Formatting Rules ###

# Organize using directives
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# Newline Options
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_within_query_expression_clauses = true

# Indentation Options
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = false

# Spacing Options
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false

# Wrap options
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

### Naming rules ###
dotnet_naming_style.pascal_case.capitalization = pascal_case

# Interfaces
dotnet_naming_rule.interfaces.severity = warning
dotnet_naming_rule.interfaces.symbols = interfaces
dotnet_naming_rule.interfaces.style = interfaces

dotnet_naming_symbols.interfaces.applicable_kinds = interface

dotnet_naming_style.interfaces.capitalization = pascal_case
dotnet_naming_style.interfaces.required_prefix = I

# Types and namespaces
dotnet_naming_rule.types.severity = warning
dotnet_naming_rule.types.symbols = types
dotnet_naming_rule.types.style = pascal_case

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum, delegate, namespace

# Type parameters
dotnet_naming_rule.type_parameters.severity = warning
dotnet_naming_rule.type_parameters.symbols = type_parameters
dotnet_naming_rule.type_parameters.style = type_parameters

dotnet_naming_symbols.type_parameters.applicable_kinds = type_parameter

dotnet_naming_style.type_parameters.capitalization = pascal_case
dotnet_naming_style.type_parameters.required_prefix = T

# Methods, properties, events and local functions
dotnet_naming_rule.methods_properties_events.severity = warning
dotnet_naming_rule.methods_properties_events.symbols = methods_properties_events
dotnet_naming_rule.methods_properties_events.style = pascal_case

dotnet_naming_symbols.methods_properties_events.applicable_kinds = method, property, event, local_function

# Constant Fields
dotnet_naming_rule.constant_fields.severity = warning
dotnet_naming_rule.constant_fields.symbols = constant_fields
dotnet_naming_rule.constant_fields.style = pascal_case

dotnet_naming_symbols.constant_fields.applicable_kinds = field
dotnet_naming_symbols.constant_fields.applicable_accessibilities = private
dotnet_naming_symbols.constant_fields.required_modifiers = const

# Static Fields (private)
dotnet_naming_rule.static_fields_private.severity = warning
dotnet_naming_rule.static_fields_private.symbols = static_fields_private
dotnet_naming_rule.static_fields_private.style = static_fields_private

dotnet_naming_symbols.static_fields_private.applicable_kinds = field
dotnet_naming_symbols.static_fields_private.applicable_accessibilities = private
dotnet_naming_symbols.static_fields_private.required_modifiers = static

dotnet_naming_style.static_fields_private.capitalization = camel_case
dotnet_naming_style.static_fields_private.required_prefix = s_

# Fields (not private)
dotnet_naming_rule.fields.severity = warning
dotnet_naming_rule.fields.symbols = fields
dotnet_naming_rule.fields.style = pascal_case

dotnet_naming_symbols.fields.applicable_kinds = field
dotnet_naming_symbols.fields.applicable_accessibilities = public, internal, protected, protected_internal

# Fields (private)
dotnet_naming_rule.fields_private.severity = warning
dotnet_naming_rule.fields_private.symbols = fields_private
dotnet_naming_rule.fields_private.style = fields_private

dotnet_naming_symbols.fields_private.applicable_kinds = field
dotnet_naming_symbols.fields_private.applicable_accessibilities = private

dotnet_naming_style.fields_private.capitalization = camel_case
dotnet_naming_style.fields_private.required_prefix = _
